namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
default namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xi = "http://www.w3.org/2001/XInclude"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2017-05-18T14:55:10Z. .
# TEI Edition: Version 3.1.0. Last updated on
#	15th December 2016, revision d3f5e70
# TEI Edition Location: http://www.tei-c.org/Vault/P5/Version 3.1.0/
#

# http://creativecommons.org/licenses/by/4.0/
macro.paraContent =
  (text
   | model.gLike
   | model.phrase
   | model.inter
   | model.global
   | model.lLike)*
macro.limitedContent = (text | model.limitedPhrase | model.inter)*
macro.phraseSeq = (text | model.gLike | model.phrase | model.global)*
macro.phraseSeq.limited = (text | model.limitedPhrase | model.global)*
macro.specialPara =
  (text
   | model.gLike
   | model.phrase
   | model.inter
   | model.divPart
   | model.global)*
att.ascribed.attributes = att.ascribed.attribute.who
att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list { xsd:anyURI+ }
  }?
att.canonical.attributes =
  att.canonical.attribute.key, att.canonical.attribute.ref
att.canonical.attribute.key =
  
  ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
  attribute key { xsd:string }?
att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition or identity for the entity being named by means of one or more URIs.
  attribute ref {
    list { xsd:anyURI+ }
  }?
att.ranging.attributes =
  att.ranging.attribute.atLeast,
  att.ranging.attribute.atMost,
  att.ranging.attribute.min,
  att.ranging.attribute.max,
  att.ranging.attribute.confidence
att.ranging.attribute.atLeast =
  
  ## gives a minimum estimated value for the approximate measurement.
  attribute atLeast {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.atMost =
  
  ## gives a maximum estimated value for the approximate measurement.
  attribute atMost {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.min =
  
  ## where the measurement summarizes more than one observation or a range, supplies the minimum value observed.
  attribute min {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.max =
  
  ## where the measurement summarizes more than one observation or a range, supplies the maximum value observed.
  attribute max {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.ranging.attribute.confidence =
  
  ## specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by min and max, or the proportion of observed values that fall within that range.
  attribute confidence { xsd:double }?
att.dimensions.attributes =
  att.ranging.attributes,
  att.dimensions.attribute.unit,
  att.dimensions.attribute.quantity,
  att.dimensions.attribute.extent,
  att.dimensions.attribute.precision,
  att.dimensions.attribute.scope
att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## Suggested values include: 1] cm(centimetres) ; 2] mm(millimetres) ; 3] in(inches) ; 4] lines; 5] chars(characters) 
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "lines"
    | 
      ## (characters) characters of text
      "chars"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.dimensions.attribute.quantity =
  
  ## specifies the length in the units specified
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
att.dimensions.attribute.extent =
  
  ## indicates the size of the object concerned using a project-specific vocabulary combining quantity and units in a single string of words.
  attribute extent { xsd:string }?
att.dimensions.attribute.precision =
  
  ## characterizes the precision of the values specified by the other attributes.
  attribute precision {
    
    ##
    "high"
    | 
      ##
      "medium"
    | 
      ##
      "low"
    | 
      ##
      "unknown"
  }?
att.dimensions.attribute.scope =
  
  ## where the measurement summarizes more than one observation, specifies the applicability of this measurement.
  ## Sample values include: 1] all; 2] most; 3] range
  attribute scope {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.written.attributes = att.written.attribute.hand
att.written.attribute.hand =
  
  ## points to a handNote element describing the hand considered responsible for the textual content of the element concerned.
  attribute hand { xsd:anyURI }?
att.datable.w3c.attributes =
  att.datable.w3c.attribute.when,
  att.datable.w3c.attribute.notBefore,
  att.datable.w3c.attribute.notAfter,
  att.datable.w3c.attribute.from,
  att.datable.w3c.attribute.to
att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
sch:pattern [
  id =
    "tei_OrtsRepertorium-1817-att.datable.w3c-att-datable-w3c-when-constraint-rule-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@when]"
    "\x{a}" ~
    "        "
    sch:report [
      role = "nonfatal"
      test = "@notBefore|@notAfter|@from|@to"
      "The @when attribute cannot be used with any other att.datable.w3c attributes."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id =
    "tei_OrtsRepertorium-1817-att.datable.w3c-att-datable-w3c-from-constraint-rule-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@from]"
    "\x{a}" ~
    "        "
    sch:report [
      role = "nonfatal"
      test = "@notBefore"
      "The @from and @notBefore attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id =
    "tei_OrtsRepertorium-1817-att.datable.w3c-att-datable-w3c-to-constraint-rule-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@to]"
    "\x{a}" ~
    "        "
    sch:report [
      role = "nonfatal"
      test = "@notAfter"
      "The @to and @notAfter attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.datable.attributes =
  att.datable.w3c.attributes,
  att.datable.iso.attributes,
  att.datable.custom.attributes,
  att.datable.attribute.calendar,
  att.datable.attribute.period
att.datable.attribute.calendar =
  
  ## indicates the system or calendar to which the date represented by the content of this element belongs.
  attribute calendar { xsd:anyURI }?
sch:pattern [
  id =
    "tei_OrtsRepertorium-1817-att.datable-calendar-calendar-constraint-rule-4"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "string-length(.) gt 0"
      "\x{a}" ~
      "@calendar indicates the system or calendar to which the date represented by the content of this element\x{a}" ~
      "belongs, but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.datable.attribute.period =
  
  ## supplies a pointer to some location defining a named period of time within which the datable item is understood to have occurred.
  attribute period { xsd:anyURI }?
att.declarable.attributes = att.declarable.attribute.default
att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when its parent is selected.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## This element is selected if its parent is selected
    "true"
    | 
      ## This element can only be selected explicitly, unless it is the only one of its kind, in which case it is selected if its parent is selected.
      "false"
  }?
att.declaring.attributes = att.declaring.attribute.decls
att.declaring.attribute.decls =
  
  ## identifies one or more declarable elements within the header, which are understood to apply to the element bearing this attribute and its content.
  attribute decls {
    list { xsd:anyURI+ }
  }?
att.fragmentable.attributes = att.fragmentable.attribute.part
att.fragmentable.attribute.part =
  
  ## specifies whether or not its parent element is fragmented in some way, typically by some other overlapping structure: for example a speech which is divided between two or more verse stanzas, a paragraph which is split across a page division, a verse line which is divided between two speakers.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the element is fragmented in some (unspecified) respect
    "Y"
    | 
      ## (no) the element is not fragmented, or no claim is made as to its completeness
      "N"
    | 
      ## (initial) this is the initial part of a fragmented element
      "I"
    | 
      ## (medial) this is a medial part of a fragmented element
      "M"
    | 
      ## (final) this is the final part of a fragmented element
      "F"
  }?
att.docStatus.attributes = att.docStatus.attribute.status
att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ]
  attribute status {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.global.responsibility.attributes =
  att.global.responsibility.attribute.cert,
  att.global.responsibility.attribute.resp
att.global.responsibility.attribute.cert =
  
  ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
  attribute cert {
    xsd:double
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
att.global.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list { xsd:anyURI+ }
  }?
att.editLike.attributes =
  att.dimensions.attributes,
  att.editLike.attribute.evidence,
  att.editLike.attribute.instant
att.editLike.attribute.evidence =
  
  ## indicates the nature of the evidence supporting the reliability or accuracy of the intervention or interpretation.
  ## Suggested values include: 1] internal; 2] external; 3] conjecture
  attribute evidence {
    list {
      (
       ## there is internal evidence to support the intervention.
       "internal"
       | 
         ## there is external evidence to support the intervention.
         "external"
       | 
         ## the intervention or interpretation has been made by the editor, cataloguer, or scholar on the basis of their expertise.
         "conjecture"
       | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
    }
  }?
att.editLike.attribute.instant =
  
  ## indicates whether this is an instant revision or not.
  [ a:defaultValue = "false" ]
  attribute instant {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
att.global.rendition.attributes =
  att.global.rendition.attribute.rend,
  att.global.rendition.attribute.style,
  att.global.rendition.attribute.rendition
att.global.rendition.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or presented in the source text.
  attribute rend {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.global.rendition.attribute.style =
  
  ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
  attribute style { xsd:string }?
att.global.rendition.attribute.rendition =
  
  ## points to a description of the rendering or presentation used for this element in the source text.
  attribute rendition {
    list { xsd:anyURI+ }
  }?
att.global.source.attributes = att.global.source.attribute.source
att.global.source.attribute.source =
  
  ## specifies the source from which some aspect of this element is drawn.
  attribute source {
    list { xsd:anyURI+ }
  }?
att.global.attributes =
  att.global.rendition.attributes,
  att.global.responsibility.attributes,
  att.global.source.attributes,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang,
  att.global.attribute.xmlbase,
  att.global.attribute.xmlspace
att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
  attribute n { xsd:string }?
att.global.attribute.xmllang =
  
  ## (language) indicates the language of the element content using a tag generated according to BCP 47.
  attribute xml:lang {
    xsd:language
    | (
       ##
       "")
  }?
att.global.attribute.xmlbase =
  
  ## provides a base URI reference with which applications can resolve relative URI references into absolute URI references.
  attribute xml:base { xsd:anyURI }?
att.global.attribute.xmlspace =
  
  ## signals an intention about how white space should be managed by applications.
  attribute xml:space {
    
    ## signals that the application's default white-space processing modes are acceptable
    "default"
    | 
      ## indicates the intent that applications preserve all white space
      "preserve"
  }?
att.resourced.attributes = att.resourced.attribute.url
att.resourced.attribute.url =
  
  ## (uniform resource locator) specifies the URL from which the media concerned may be obtained.
  attribute url { xsd:anyURI }
att.naming.attributes =
  att.canonical.attributes,
  att.naming.attribute.role,
  att.naming.attribute.nymRef
att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
  attribute role {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form (nym) of the names associated with the object named by the element bearing it.
  attribute nymRef {
    list { xsd:anyURI+ }
  }?
att.placement.attributes = att.placement.attribute.place
att.placement.attribute.place =
  
  ## specifies where this item is placed.
  ## Suggested values include: 1] below; 2] bottom; 3] margin; 4] top; 5] opposite; 6] overleaf; 7] above; 8] end; 9] inline; 10] inspace
  attribute place {
    list {
      (
       ## below the line
       "below"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## at the top of the page
         "top"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ## in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
    }
  }?
att.typed.attributes =
  att.typed.attribute.type, att.typed.attribute.subtype
att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient classification scheme or typology.
  attribute type {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.typed.attribute.subtype =
  
  ## provides a sub-categorization of the element, if needed
  attribute subtype {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
sch:pattern [
  id =
    "tei_OrtsRepertorium-1817-att.typed-subtypeTyped-constraint-rule-5"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@subtype]"
    "\x{a}" ~
    "        "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attributes =
  att.pointing.attribute.targetLang,
  att.pointing.attribute.target,
  att.pointing.attribute.evaluate
att.pointing.attribute.targetLang =
  
  ## specifies the language of the content to be found at the destination referenced by target, using a language tag generated according to BCP 47.
  attribute targetLang {
    xsd:language
    | (
       ##
       "")
  }?
sch:pattern [
  id =
    "tei_OrtsRepertorium-1817-att.pointing-targetLang-targetLang-constraint-rule-6"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "@target"
      "@targetLang should only be used on "
      sch:name [ ]
      " if @target is specified."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References
  attribute target {
    list { xsd:anyURI+ }
  }?
att.pointing.attribute.evaluate =
  
  ## specifies the intended meaning when the target of a pointer is itself a pointer.
  attribute evaluate {
    
    ## if the element pointed to is itself a pointer, then the target of that pointer will be taken, and so on, until an element is found which is not a pointer.
    "all"
    | 
      ## if the element pointed to is itself a pointer, then its target (whether a pointer or not) is taken as the target of this pointer.
      "one"
    | 
      ## no further evaluation of targets is carried out beyond that needed to find the element specified in the pointer's target.
      "none"
  }?
att.sortable.attributes = att.sortable.attribute.sortKey
att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
att.translatable.attributes = att.translatable.attribute.versionDate
att.translatable.attribute.versionDate =
  
  ## specifies the date on which the source text was extracted and sent to the translator
  attribute versionDate {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
model.nameLike.agent = name
model.nameLike.agent_alternation = name
model.nameLike.agent_sequence = name
model.nameLike.agent_sequenceOptional = name?
model.nameLike.agent_sequenceOptionalRepeatable = name*
model.nameLike.agent_sequenceRepeatable = name+
model.segLike = notAllowed
model.hiLike = notAllowed
model.hiLike_alternation = notAllowed
model.hiLike_sequence = empty
model.hiLike_sequenceOptional = empty
model.hiLike_sequenceOptionalRepeatable = empty
model.hiLike_sequenceRepeatable = notAllowed
model.emphLike = title
model.emphLike_alternation = title
model.emphLike_sequence = title
model.emphLike_sequenceOptional = title?
model.emphLike_sequenceOptionalRepeatable = title*
model.emphLike_sequenceRepeatable = title+
model.highlighted = model.hiLike | model.emphLike
model.dateLike = date
model.dateLike_alternation = date
model.dateLike_sequence = date
model.dateLike_sequenceOptional = date?
model.dateLike_sequenceOptionalRepeatable = date*
model.dateLike_sequenceRepeatable = date+
model.measureLike = notAllowed
model.measureLike_alternation = notAllowed
model.measureLike_sequence = empty
model.measureLike_sequenceOptional = empty
model.measureLike_sequenceOptionalRepeatable = empty
model.measureLike_sequenceRepeatable = notAllowed
model.egLike = notAllowed
model.egLike_alternation = notAllowed
model.egLike_sequence = empty
model.egLike_sequenceOptional = empty
model.egLike_sequenceOptionalRepeatable = empty
model.egLike_sequenceRepeatable = notAllowed
model.graphicLike = notAllowed
model.offsetLike = notAllowed
model.offsetLike_alternation = notAllowed
model.offsetLike_sequence = empty
model.offsetLike_sequenceOptional = empty
model.offsetLike_sequenceOptionalRepeatable = empty
model.offsetLike_sequenceRepeatable = notAllowed
model.pPart.msdesc = notAllowed
model.pPart.editorial = notAllowed
model.pPart.editorial_alternation = notAllowed
model.pPart.editorial_sequence = empty
model.pPart.editorial_sequenceOptional = empty
model.pPart.editorial_sequenceOptionalRepeatable = empty
model.pPart.editorial_sequenceRepeatable = notAllowed
model.pPart.transcriptional = notAllowed
model.pPart.transcriptional_alternation = notAllowed
model.pPart.transcriptional_sequence = empty
model.pPart.transcriptional_sequenceOptional = empty
model.pPart.transcriptional_sequenceOptionalRepeatable = empty
model.pPart.transcriptional_sequenceRepeatable = notAllowed
model.pPart.edit = model.pPart.editorial | model.pPart.transcriptional
model.ptrLike = notAllowed
model.lPart = notAllowed
model.global.meta = notAllowed
model.milestoneLike = notAllowed
model.gLike = notAllowed
model.oddDecl = notAllowed
model.oddDecl_alternation = notAllowed
model.oddDecl_sequence = empty
model.oddDecl_sequenceOptional = empty
model.oddDecl_sequenceOptionalRepeatable = empty
model.oddDecl_sequenceRepeatable = notAllowed
model.phrase.xml = notAllowed
model.specDescLike = notAllowed
model.biblLike = biblStruct
model.biblLike_alternation = biblStruct
model.biblLike_sequence = biblStruct
model.biblLike_sequenceOptional = biblStruct?
model.biblLike_sequenceOptionalRepeatable = biblStruct*
model.biblLike_sequenceRepeatable = biblStruct+
model.headLike = notAllowed
model.headLike_alternation = notAllowed
model.headLike_sequence = empty
model.headLike_sequenceOptional = empty
model.headLike_sequenceOptionalRepeatable = empty
model.headLike_sequenceRepeatable = notAllowed
model.labelLike = desc
model.labelLike_alternation = desc
model.labelLike_sequence = desc
model.labelLike_sequenceOptional = desc?
model.labelLike_sequenceOptionalRepeatable = desc*
model.labelLike_sequenceRepeatable = desc+
model.listLike = listPlace
model.listLike_alternation = listPlace
model.listLike_sequence = listPlace
model.listLike_sequenceOptional = listPlace?
model.listLike_sequenceOptionalRepeatable = listPlace*
model.listLike_sequenceRepeatable = listPlace+
model.noteLike = note
model.lLike = notAllowed
model.lLike_alternation = notAllowed
model.lLike_sequence = empty
model.lLike_sequenceOptional = empty
model.lLike_sequenceOptionalRepeatable = empty
model.lLike_sequenceRepeatable = notAllowed
model.pLike = p
model.pLike_alternation = p
model.pLike_sequence = p
model.pLike_sequenceOptional = p?
model.pLike_sequenceOptionalRepeatable = p*
model.pLike_sequenceRepeatable = p+
model.stageLike = notAllowed
model.stageLike_alternation = notAllowed
model.stageLike_sequence = empty
model.stageLike_sequenceOptional = empty
model.stageLike_sequenceOptionalRepeatable = empty
model.stageLike_sequenceRepeatable = notAllowed
model.eventLike = notAllowed
model.global.edit = notAllowed
model.divPart = model.lLike | model.pLike
model.placeNamePart = placeName
model.placeNamePart_alternation = placeName
model.placeNamePart_sequence = placeName
model.placeNamePart_sequenceOptional = placeName?
model.placeNamePart_sequenceOptionalRepeatable = placeName*
model.placeNamePart_sequenceRepeatable = placeName+
model.placeStateLike = model.placeNamePart | population | state
model.placeStateLike_alternation =
  model.placeNamePart_alternation | population | state
model.placeStateLike_sequence =
  model.placeNamePart_sequence, population, state
model.placeStateLike_sequenceOptional =
  model.placeNamePart_sequenceOptional?, population?, state?
model.placeStateLike_sequenceOptionalRepeatable =
  model.placeNamePart_sequenceOptionalRepeatable*, population*, state*
model.placeStateLike_sequenceRepeatable =
  model.placeNamePart_sequenceRepeatable+, population+, state+
model.publicationStmtPart.agency = publisher | distributor | authority
model.publicationStmtPart.detail =
  address | date | pubPlace | idno | availability
model.availabilityPart = licence
model.descLike = desc
model.glossLike = notAllowed
model.quoteLike = notAllowed
model.quoteLike_alternation = notAllowed
model.quoteLike_sequence = empty
model.quoteLike_sequenceOptional = empty
model.quoteLike_sequenceOptionalRepeatable = empty
model.quoteLike_sequenceRepeatable = notAllowed
model.qLike = model.quoteLike
model.qLike_alternation = model.quoteLike_alternation
model.qLike_sequence = model.quoteLike_sequence
model.qLike_sequenceOptional = model.quoteLike_sequenceOptional?
model.qLike_sequenceOptionalRepeatable =
  model.quoteLike_sequenceOptionalRepeatable*
model.qLike_sequenceRepeatable = model.quoteLike_sequenceRepeatable+
model.respLike =
  author | editor | respStmt | sponsor | funder | principal
model.divWrapper = notAllowed
model.divTopPart = model.headLike
model.divTop = model.divWrapper | model.divTopPart
model.frontPart.drama = notAllowed
model.pLike.front = docTitle | titlePart | docImprint
model.divBottomPart = notAllowed
model.divBottom = model.divWrapper | model.divBottomPart
model.imprintPart = publisher | pubPlace | distributor
model.catDescPart = notAllowed
model.addressLike = email | address
model.addressLike_alternation = email | address
model.addressLike_sequence = email, address
model.addressLike_sequenceOptional = email?, address?
model.addressLike_sequenceOptionalRepeatable = email*, address*
model.addressLike_sequenceRepeatable = email+, address+
model.nameLike =
  model.nameLike.agent
  | model.offsetLike
  | model.placeStateLike
  | idno
  | model.persNamePart
model.nameLike_alternation =
  model.nameLike.agent_alternation
  | model.offsetLike_alternation
  | model.placeStateLike_alternation
  | idno
  | model.persNamePart_alternation
model.nameLike_sequence =
  model.nameLike.agent_sequence,
  model.offsetLike_sequence,
  model.placeStateLike_sequence,
  idno,
  model.persNamePart_sequence
model.nameLike_sequenceOptional =
  model.nameLike.agent_sequenceOptional?,
  model.offsetLike_sequenceOptional?,
  model.placeStateLike_sequenceOptional?,
  idno?,
  model.persNamePart_sequenceOptional?
model.nameLike_sequenceOptionalRepeatable =
  model.nameLike.agent_sequenceOptionalRepeatable*,
  model.offsetLike_sequenceOptionalRepeatable*,
  model.placeStateLike_sequenceOptionalRepeatable*,
  idno*,
  model.persNamePart_sequenceOptionalRepeatable*
model.nameLike_sequenceRepeatable =
  model.nameLike.agent_sequenceRepeatable+,
  model.offsetLike_sequenceRepeatable+,
  model.placeStateLike_sequenceRepeatable+,
  idno+,
  model.persNamePart_sequenceRepeatable+
model.global =
  model.global.meta
  | model.milestoneLike
  | model.noteLike
  | model.global.edit
model.frontPart = model.frontPart.drama
model.addrPart = model.nameLike | addrLine | postCode | postBox
model.pPart.data =
  model.dateLike
  | model.measureLike
  | model.addressLike
  | model.nameLike
model.inter =
  model.egLike
  | model.oddDecl
  | model.biblLike
  | model.labelLike
  | model.listLike
  | model.stageLike
  | model.qLike
model.common = model.divPart | model.inter
model.phrase =
  model.segLike
  | model.highlighted
  | model.graphicLike
  | model.pPart.msdesc
  | model.pPart.edit
  | model.ptrLike
  | model.lPart
  | model.phrase.xml
  | model.specDescLike
  | model.pPart.data
model.limitedPhrase =
  model.hiLike
  | model.emphLike
  | model.pPart.msdesc
  | model.pPart.editorial
  | model.ptrLike
  | model.phrase.xml
  | model.pPart.data
model.divLike = notAllowed
model.divGenLike = notAllowed
model.div1Like = notAllowed
model.applicationLike = application
model.teiHeaderPart = encodingDesc | profileDesc
model.sourceDescPart = notAllowed
model.encodingDescPart =
  schemaRef
  | projectDesc
  | samplingDecl
  | editorialDecl
  | tagsDecl
  | classDecl
  | geoDecl
  | appInfo
model.editorialDeclPart =
  correction
  | normalization
  | quotation
  | hyphenation
  | segmentation
  | punctuation
model.profileDescPart = langUsage | textClass
model.resourceLike = \text
att.personal.attributes =
  att.naming.attributes,
  att.personal.attribute.full,
  att.personal.attribute.sort
att.personal.attribute.full =
  
  ## indicates whether the name component is given in full, as an abbreviation or simply as an initial.
  [ a:defaultValue = "yes" ]
  attribute full {
    
    ## the name component is spelled out in full.
    "yes"
    | 
      ## (abbreviated) the name component is given in an abbreviated form.
      "abb"
    | 
      ## (initial letter) the name component is indicated only by one initial.
      "init"
  }?
att.personal.attribute.sort =
  
  ## specifies the sort order of the name component in relation to others within the name.
  attribute sort { xsd:nonNegativeInteger }?
model.placeLike = place
p =
  
  ## (paragraph) marks paragraphs in prose. [3.1. Paragraphs 7.2.5. Speech Contents]
  element p {
    macro.paraContent
    >> sch:pattern [
         id =
           "tei_OrtsRepertorium-1817-p-abstractModel-p-constraint-report-4"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:p or ancestor::tei:ab)          and not(parent::tei:exemplum                |parent::tei:item                |parent::tei:note                |parent::tei:q                |parent::tei:quote                |parent::tei:remarks                |parent::tei:said                |parent::tei:sp                |parent::tei:stage                |parent::tei:cell                |parent::tei:figure)"
             "\x{a}" ~
             "        Abstract model violation: Paragraphs may not contain other paragraphs or ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "tei_OrtsRepertorium-1817-p-abstractModel-structure-l-constraint-report-5"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:p[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div, p, or ab.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.declaring.attributes,
    att.fragmentable.attributes,
    att.written.attributes,
    empty
  }
desc =
  
  ## (description) contains a brief description of the object documented by its parent element, typically a documentation element or an entity. [22.4.1. Description of Components]
  element desc {
    macro.limitedContent,
    att.global.attributes,
    att.translatable.attributes,
    att.typed.attributes,
    empty
  }
name =
  
  ## (name, proper noun) contains a proper noun or noun phrase. [3.5.1. Referring Strings]
  element name {
    macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
email =
  
  ## (electronic mail address) contains an email address identifying a location to which email messages can be delivered. [3.5.2. Addresses]
  element email { macro.phraseSeq, att.global.attributes, empty }
address =
  
  ## contains a postal address, for example of a publisher, an organization, or an individual. [3.5.2. Addresses 2.2.4. Publication, Distribution, Licensing, etc. 3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element address {
    (model.global*, (model.addrPart, model.global*)+),
    att.global.attributes,
    empty
  }
addrLine =
  
  ## (address line) contains one line of a postal address. [3.5.2. Addresses 2.2.4. Publication, Distribution, Licensing, etc. 3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element addrLine { macro.phraseSeq, att.global.attributes, empty }
postCode =
  
  ## (postal code) contains a numerical or alphanumeric code used as part of a postal address to simplify sorting or delivery of mail. [3.5.2. Addresses]
  element postCode { text, att.global.attributes, empty }
postBox =
  
  ## (postal box or post office box) contains a number or other identifier for some postal delivery point other than a street address. [3.5.2. Addresses]
  element postBox { text, att.global.attributes, empty }
date =
  
  ## contains a date in any format. [3.5.4. Dates and Times 2.2.4. Publication, Distribution, Licensing, etc. 2.6. The Revision Description 3.11.2.4. Imprint, Size of a Document, and Reprint Information 15.2.3. The Setting Description 13.3.6. Dates and Times]
  element date {
    (text | model.gLike | model.phrase | model.global)*,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
note =
  
  ## contains a note or annotation. [3.8.1. Notes and Simple Annotation 2.2.6. The Notes Statement 3.11.2.8. Notes and Statement of Language 9.3.5.4. Notes within Entries]
  element note {
    macro.specialPara,
    att.global.attributes,
    att.placement.attributes,
    att.pointing.attributes,
    att.typed.attributes,
    att.written.attributes,
    
    ## indicates whether the copy text shows the exact place of reference for the note.
    [ a:defaultValue = "true" ] attribute anchored { xsd:boolean }?,
    
    ## points to the end of the span to which the note is attached, if the note is not embedded in the text at that point.
    attribute targetEnd {
      list { xsd:anyURI+ }
    }?,
    empty
  }
analytic =
  
  ## (analytic level) contains bibliographic elements describing an item (e.g. an article or poem) published within a monograph or journal and not as an independent publication. [3.11.2.1. Analytic, Monographic, and Series Levels]
  element analytic {
    (author
     | editor
     | respStmt
     | title
     | model.ptrLike
     | date
     | idno
     | availability)*,
    att.global.attributes,
    empty
  }
monogr =
  
  ## (monographic level) contains bibliographic elements describing an item (e.g. a book or journal) published as an independent item (i.e. as a separate physical object). [3.11.2.1. Analytic, Monographic, and Series Levels]
  element monogr {
    ((((author | editor | respStmt),
       (author | editor | respStmt)*,
       title+,
       (model.ptrLike | idno | editor | respStmt)*)
      | ((title | model.ptrLike | idno)+, (author | editor | respStmt)*)
      | (authority, idno))?,
     availability*,
     model.noteLike*,
     (edition,
      (idno | model.ptrLike | editor | sponsor | funder | respStmt)*)*,
     imprint,
     (imprint | extent)*),
    att.global.attributes,
    empty
  }
author =
  
  ## in a bibliographic reference, contains the name(s) of an author, personal or corporate, of a work; for example in the same form as that provided by a recognized bibliographic name authority. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement]
  element author {
    macro.phraseSeq, att.global.attributes, att.naming.attributes, empty
  }
editor =
  
  ## contains a secondary statement of responsibility for a bibliographic item, for example the name of an individual, institution or organization, (or of several such) acting as editor, compiler, translator, etc. [3.11.2.2. Titles, Authors, and Editors]
  element editor {
    macro.phraseSeq, att.global.attributes, att.naming.attributes, empty
  }
respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition, recording, or series, where the specialized elements for authors, editors, etc. do not suffice or do not apply. May also be used to encode information about individuals or organizations which have played a role in the production or distribution of a bibliographic work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element respStmt {
    ((resp+, model.nameLike.agent+) | (model.nameLike.agent+, resp+)),
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
resp =
  
  ## (responsibility) contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role in the production or distribution of a work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element resp {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.canonical.attributes,
    att.datable.attributes,
    empty
  }
title =
  
  ## contains a title for any kind of work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.5. The Series Statement]
  element title {
    macro.paraContent,
    att.global.attributes,
    att.canonical.attributes,
    att.typed.attribute.subtype,
    att.datable.attributes,
    
    ## classifies the title according to some convenient typology.
    ## Sample values include: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## indicates the bibliographic level for a title, that is, whether it identifies an article, book, journal, series, or unpublished material.
    attribute level {
      
      ## (analytic) the title applies to an analytic item, such as an article, poem, or other work published as part of a larger item.
      "a"
      | 
        ## (monographic) the title applies to a monograph such as a book or other item considered to be a distinct publication, including single volumes of multi-volume works
        "m"
      | 
        ## (journal) the title applies to any serial or periodical publication such as a journal, magazine, or newspaper
        "j"
      | 
        ## (series) the title applies to a series of otherwise distinct publications such as a collection
        "s"
      | 
        ## (unpublished) the title applies to any unpublished material (including theses and dissertations unless published by a commercial press)
        "u"
    }?,
    empty
  }
imprint =
  
  ## groups information relating to the publication or distribution of a bibliographic item. [3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element imprint {
    ((classCode)*,
     ((model.imprintPart | model.dateLike), respStmt*, model.global*)+),
    att.global.attributes,
    empty
  }
publisher =
  
  ## provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.11.2.4. Imprint, Size of a Document, and Reprint Information 2.2.4. Publication, Distribution, Licensing, etc.]
  element publisher { macro.phraseSeq, att.global.attributes, empty }
pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published. [3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element pubPlace {
    macro.phraseSeq, att.global.attributes, att.naming.attributes, empty
  }
biblStruct =
  
  ## (structured bibliographic citation) contains a structured bibliographic citation, in which only bibliographic sub-elements appear and in a specified order. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element biblStruct {
    (analytic*, monogr+, (model.noteLike | model.ptrLike)*),
    att.global.attributes,
    att.declarable.attributes,
    att.typed.attributes,
    att.sortable.attributes,
    att.docStatus.attributes,
    empty
  }
teiHeader =
  
  ## (TEI header) supplies descriptive and declarative metadata associated with a digital resource or set of resources. [2.1.1. The TEI Header and Its Components 15.1. Varieties of Composite Text]
  element teiHeader {
    (fileDesc, model.teiHeaderPart*, revisionDesc?),
    att.global.attributes,
    empty
  }
fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [2.2. The File Description 2.1.1. The TEI Header and Its Components]
  element fileDesc {
    ((titleStmt, editionStmt?, extent?, publicationStmt, notesStmt?),
     sourceDesc+),
    att.global.attributes,
    empty
  }
titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1. The Title Statement 2.2. The File Description]
  element titleStmt {
    (title+, model.respLike*), att.global.attributes, empty
  }
sponsor =
  
  ## specifies the name of a sponsoring organization or institution. [2.2.1. The Title Statement]
  element sponsor {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
funder =
  
  ## (funding body) specifies the name of an individual, institution, or organization responsible for the funding of a project or text. [2.2.1. The Title Statement]
  element funder {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
principal =
  
  ## (principal researcher) supplies the name of the principal researcher responsible for the creation of an electronic text. [2.2.1. The Title Statement]
  element principal {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
editionStmt =
  
  ## (edition statement) groups information relating to one edition of a text. [2.2.2. The Edition Statement 2.2. The File Description]
  element editionStmt {
    (model.pLike+ | (edition, model.respLike*)),
    att.global.attributes,
    empty
  }
edition =
  
  ## describes the particularities of one edition of a text. [2.2.2. The Edition Statement]
  element edition { macro.phraseSeq, att.global.attributes, empty }
extent =
  
  ## describes the approximate size of a text stored on some carrier medium or of some other object, digital or non-digital, specified in any convenient units. [2.2.3. Type and Extent of File 2.2. The File Description 3.11.2.4. Imprint, Size of a Document, and Reprint Information 10.7.1. Object Description]
  element extent { macro.phraseSeq, att.global.attributes, empty }
publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [2.2.4. Publication, Distribution, Licensing, etc. 2.2. The File Description]
  element publicationStmt {
    ((model.publicationStmtPart.agency,
      model.publicationStmtPart.detail*)+
     | model.pLike+),
    att.global.attributes,
    empty
  }
distributor =
  
  ## supplies the name of a person or other agency responsible for the distribution of a text. [2.2.4. Publication, Distribution, Licensing, etc.]
  element distributor { macro.phraseSeq, att.global.attributes, empty }
authority =
  
  ## (release authority) supplies the name of a person or other agency responsible for making a work available, other than a publisher or distributor. [2.2.4. Publication, Distribution, Licensing, etc.]
  element authority {
    macro.phraseSeq.limited, att.global.attributes, empty
  }
idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [2.2.4. Publication, Distribution, Licensing, etc. 2.2.5. The Series Statement 3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element idno {
    (text | model.gLike | idno)*,
    att.global.attributes,
    att.sortable.attributes,
    att.datable.attributes,
    att.typed.attribute.subtype,
    
    ## categorizes the identifier, for example as an ISBN, Social Security number, etc.
    ## Suggested values include: 1] ISBN; 2] ISSN; 3] DOI; 4] URI; 5] VIAF; 6] ESTC; 7] OCLC
    attribute type {
      
      ## International Standard Book Number: a 13- or (if assigned prior to 2007) 10-digit identifying number assigned by the publishing industry to a published book or similar item, registered with the International ISBN Agency.
      "ISBN"
      | 
        ## International Standard Serial Number: an eight-digit number to uniquely identify a serial publication.
        "ISSN"
      | 
        ## Digital Object Identifier: a unique string of letters and numbers assigned to an electronic document.
        "DOI"
      | 
        ## Uniform Resource Identifier: a string of characters to uniquely identify a resource which usually contains indication of the means of accessing that resource, the name of its host, and its filepath.
        "URI"
      | 
        ## A data number in the Virtual Internet Authority File assigned to link different names in catalogs around the world for the same entity.
        "VIAF"
      | 
        ## English Short-Title Catalogue number: an identifying number assigned to a document in English printed in the British Isles or North America before 1801.
        "ESTC"
      | 
        ## union catalog number in WorldCat representing a resource held by one or more of the member libraries in the global cooperative Online Computer Library Center.
        "OCLC"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
availability =
  
  ## supplies information about the availability of a text, for example any restrictions on its use or distribution, its copyright status, any licence applying to it, etc. [2.2.4. Publication, Distribution, Licensing, etc.]
  element availability {
    (model.availabilityPart | model.pLike)+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## supplies a code identifying the current availability of the text.
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## the text is freely available.
      "free"
      | 
        ## the status of the text is unknown.
        "unknown"
      | 
        ## the text is not freely available.
        "restricted"
    }?,
    empty
  }
licence =
  
  ## contains information about a licence or other legal agreement applicable to the text. [2.2.4. Publication, Distribution, Licensing, etc.]
  element licence {
    macro.specialPara,
    att.global.attributes,
    att.pointing.attributes,
    att.datable.attributes,
    empty
  }
notesStmt =
  
  ## (notes statement) collects together any notes providing information about a text additional to that recorded in other parts of the bibliographic description. [2.2.6. The Notes Statement 2.2. The File Description]
  element notesStmt { (model.noteLike)+, att.global.attributes, empty }
sourceDesc =
  
  ## (source description) describes the source from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence. [2.2.7. The Source Description]
  element sourceDesc {
    (model.pLike+
     | (model.biblLike | model.sourceDescPart | model.listLike)+),
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3. The Encoding Description 2.1.1. The TEI Header and Its Components]
  element encodingDesc {
    (model.encodingDescPart | model.pLike)+,
    att.global.attributes,
    empty
  }
schemaRef =
  
  ## (schema reference) describes or points to a related customization or schema file [2.3.9. The Schema Specification]
  element schemaRef {
    model.descLike?,
    att.global.attributes,
    att.typed.attributes,
    att.resourced.attributes,
    
    ## the identifier used for the customization or schema
    attribute key { xsd:NCName }?,
    empty
  }
projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic file was encoded, together with any other relevant information concerning the process by which it was assembled or collected. [2.3.1. The Project Description 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element projectDesc {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
samplingDecl =
  
  ## (sampling declaration) contains a prose description of the rationale and methods used in sampling texts in the creation of a corpus or collection. [2.3.2. The Sampling Declaration 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element samplingDecl {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied during the encoding of a text. [2.3.3. The Editorial Practices Declaration 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element editorialDecl {
    (model.pLike | model.editorialDeclPart)+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
correction =
  
  ## (correction principles) states how and under what circumstances corrections have been made in the text. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element correction {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## indicates the degree of correction applied to the text.
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## the text has been thoroughly checked and proofread.
      "high"
      | 
        ## the text has been checked at least once.
        "medium"
      | 
        ## the text has not been checked.
        "low"
      | 
        ## the correction status of the text is unknown.
        "unknown"
    }?,
    
    ## indicates the method adopted to indicate corrections within the text.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## corrections have been made silently
      "silent"
      | 
        ## corrections have been represented using markup
        "markup"
    }?,
    empty
  }
normalization =
  
  ## indicates the extent of normalization or regularization of the original source carried out in converting it to electronic form. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element normalization {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## indicates the method adopted to indicate normalizations within the text.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## normalization made silently
      "silent"
      | 
        ## normalization represented using markup
        "markup"
    }?,
    empty
  }
quotation =
  
  ## specifies editorial practice adopted with respect to quotation marks in the original. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element quotation {
    (model.pLike*)
    >> sch:pattern [
         id =
           "tei_OrtsRepertorium-1817-quotation-quotationContents-constraint-report-6"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:quotation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "not(@marks) and not (tei:p)"
             "\x{a}" ~
             "On "
             sch:name [ ]
             ", either the @marks attribute should be used, or a paragraph of description provided"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.declarable.attributes,
    
    ## (quotation marks) indicates whether or not quotation marks have been retained as content within the text.
    attribute marks {
      
      ## no quotation marks have been retained
      "none"
      | 
        ## some quotation marks have been retained
        "some"
      | 
        ## all quotation marks have been retained
        "all"
    }?,
    empty
  }
hyphenation =
  
  ## summarizes the way in which hyphenation in a source text has been treated in an encoded version of it. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element hyphenation {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    
    ## (end-of-line) indicates whether or not end-of-line hyphenation has been retained in a text.
    [ a:defaultValue = "some" ]
    attribute eol {
      
      ## all end-of-line hyphenation has been retained, even though the lineation of the original may not have been.
      "all"
      | 
        ## end-of-line hyphenation has been retained in some cases.
        "some"
      | 
        ## all soft end-of-line hyphenation has been removed: any remaining end-of-line hyphenation should be retained.
        "hard"
      | 
        ## all end-of-line hyphenation has been removed: any remaining hyphenation occurred within the line.
        "none"
    }?,
    empty
  }
segmentation =
  
  ## describes the principles according to which the text has been segmented, for example into sentences, tone-units, graphemic strata, etc. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element segmentation {
    model.pLike+,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
punctuation =
  
  ## specifies editorial practice adopted with respect to punctuation marks in the original. [2.3.3. The Editorial Practices Declaration 3.2. Treatment of Punctuation]
  element punctuation {
    model.pLike*,
    att.declarable.attributes,
    att.global.attributes,
    
    ## indicates whether or not punctation marks have been retained as content within the text.
    attribute marks {
      
      ## no punctuation marks have been retained
      "none"
      | 
        ## some punctuation marks have been retained
        "some"
      | 
        ## all punctuation marks have been retained
        "all"
    }?,
    
    ## indicates whether punctation marks have been captured inside or outside of an adjacent element.
    attribute placement {
      
      ## punctuation marks are captured inside adjacent elements
      "internal"
      | 
        ## punctuation marks are captured outside adjacent elements
        "external"
    }?,
    empty
  }
tagsDecl =
  
  ## (tagging declaration) provides detailed information about the tagging applied to a document. [2.3.4. The Tagging Declaration 2.3. The Encoding Description]
  element tagsDecl {
    \namespace*,
    att.global.attributes,
    
    ## indicates whether the element types listed exhaustively include all those found within text, or represent only a subset.
    attribute partial { xsd:boolean }?,
    empty
  }
tagUsage =
  
  ## documents the usage of a specific element within a specified document. [2.3.4. The Tagging Declaration]
  element tagUsage {
    macro.limitedContent,
    att.global.attributes,
    
    ## (generic identifier) specifies the name (generic identifier) of the element indicated by the tag, within the namespace indicated by the parent namespace element.
    attribute gi { xsd:Name },
    
    ## specifies the number of occurrences of this element within the text.
    attribute occurs { xsd:nonNegativeInteger }?,
    
    ## (with unique identifier) specifies the number of occurrences of this element within the text which bear a distinct value for the global xml:id attribute.
    attribute withId { xsd:nonNegativeInteger }?,
    
    ## specifies the identifier of a rendition element which defines how this element was rendered in the source text.
    attribute render {
      list { xsd:anyURI+ }
    }?,
    empty
  }
\namespace =
  
  ## supplies the formal name of the namespace to which the elements documented by its children belong. [2.3.4. The Tagging Declaration]
  element namespace {
    tagUsage+,
    att.global.attributes,
    
    ## specifies the full formal name of the namespace concerned.
    attribute name { xsd:anyURI },
    empty
  }
classDecl =
  
  ## (classification declarations) contains one or more taxonomies defining any classificatory codes used elsewhere in the text. [2.3.7. The Classification Declaration 2.3. The Encoding Description]
  element classDecl { taxonomy+, att.global.attributes, empty }
taxonomy =
  
  ## defines a typology either implicitly, by means of a bibliographic citation, or explicitly by a structured taxonomy. [2.3.7. The Classification Declaration]
  element taxonomy {
    (((category | taxonomy)+
      | ((model.glossLike | model.descLike)+, (category | taxonomy)*))
     | (model.biblLike, (category | taxonomy)*)),
    att.global.attributes,
    empty
  }
category =
  
  ## contains an individual descriptive category, possibly nested within a superordinate category, within a user-defined taxonomy. [2.3.7. The Classification Declaration]
  element category {
    ((catDesc+ | (model.descLike | model.glossLike)*),
     category*),
    att.global.attributes,
    empty
  }
catDesc =
  
  ## (category description) describes some category within a taxonomy or text typology, either in the form of a brief prose description or in terms of the situational parameters used by the TEI formal textDesc. [2.3.7. The Classification Declaration]
  element catDesc {
    (text | model.limitedPhrase | model.catDescPart)*,
    att.global.attributes,
    empty
  }
geoDecl =
  
  ## (geographic coordinates declaration) documents the notation and the datum used for geographic coordinates expressed as content of the geo element elsewhere within the document. [2.3.8. The Geographic Coordinates Declaration]
  element geoDecl {
    macro.phraseSeq,
    att.global.attributes,
    att.declarable.attributes,
    
    ## supplies a commonly used code name for the datum employed.
    ## Suggested values include: 1] WGS84(World Geodetic System) ; 2] MGRS(Military Grid Reference System) ; 3] OSGB36(ordnance survey great britain) ; 4] ED50(European Datum coordinate system) 
    [ a:defaultValue = "WGS84" ]
    attribute datum {
      
      ## (World Geodetic System) a pair of numbers to be interpreted as latitude followed by longitude according to the World Geodetic System.
      "WGS84"
      | 
        ## (Military Grid Reference System) the values supplied are geospatial entity object codes, based on
        "MGRS"
      | 
        ## (ordnance survey great britain) the value supplied is to be interpreted as a British National Grid Reference.
        "OSGB36"
      | 
        ## (European Datum coordinate system) the value supplied is to be interpreted as latitude followed by longitude according to the European Datum coordinate system.
        "ED50"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
appInfo =
  
  ## (application information) records information about an application which has edited the TEI file. [2.3.10. The Application Information Element]
  element appInfo {
    model.applicationLike+, att.global.attributes, empty
  }
application =
  
  ## provides information about an application which has acted upon the document. [2.3.10. The Application Information Element]
  element application {
    (model.labelLike+, (model.ptrLike* | model.pLike*)),
    att.global.attributes,
    att.typed.attributes,
    att.datable.attributes,
    
    ## supplies an identifier for the application, independent of its version number or display name.
    attribute ident { xsd:Name },
    
    ## supplies a version number for the application, independent of its identifier or display name.
    attribute version {
      xsd:token {
        pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}"
      }
    },
    empty
  }
profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a text, specifically the languages and sublanguages used, the situation in which it was produced, the participants and their setting. [2.4. The Profile Description 2.1.1. The TEI Header and Its Components]
  element profileDesc {
    model.profileDescPart*, att.global.attributes, empty
  }
langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc. represented within a text. [2.4.2. Language Usage 2.4. The Profile Description 15.3.2. Declarable Elements]
  element langUsage {
    (model.pLike+ | language+),
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
language =
  
  ## characterizes a single language or sublanguage used within a text. [2.4.2. Language Usage]
  element language {
    macro.phraseSeq.limited,
    att.global.attributes,
    
    ## (identifier) Supplies a language code constructed as defined in BCP 47 which is used to identify the language documented by this element, and which is referenced by the global xml:lang attribute.
    attribute ident {
      xsd:language
      | (
         ##
         "")
    },
    
    ## specifies the approximate percentage (by volume) of the text which uses this language.
    attribute usage { xsd:nonNegativeInteger }?,
    empty
  }
textClass =
  
  ## (text classification) groups information which describes the nature or topic of a text in terms of a standard classification scheme, thesaurus, etc. [2.4.3. The Text Classification]
  element textClass {
    (classCode | keywords)*,
    att.global.attributes,
    att.declarable.attributes,
    empty
  }
keywords =
  
  ## contains a list of keywords or phrases identifying the topic or nature of a text. [2.4.3. The Text Classification]
  element keywords {
    empty,
    att.global.attributes,
    
    ## identifies the controlled vocabulary within which the set of keywords concerned is defined, for example by a taxonomy element, or by some other resource.
    attribute scheme { xsd:anyURI }?,
    empty
  }
classCode =
  
  ## (classification code) contains the classification code used for this text in some standard classification system. [2.4.3. The Text Classification]
  element classCode {
    macro.phraseSeq.limited,
    att.global.attributes,
    
    ## identifies the classification system in use, as defined by, e.g. a taxonomy element, or some other resource.
    attribute scheme { xsd:anyURI },
    empty
  }
revisionDesc =
  
  ## (revision description) summarizes the revision history for a file. [2.6. The Revision Description 2.1.1. The TEI Header and Its Components]
  element revisionDesc {
    (listChange | change+),
    att.global.attributes,
    att.docStatus.attributes,
    empty
  }
change =
  
  ## documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [2.6. The Revision Description 2.4.1. Creation 11.7. Identifying Changes and Revisions]
  element change {
    macro.specialPara,
    att.ascribed.attributes,
    att.datable.attributes,
    att.docStatus.attributes,
    att.global.attributes,
    att.typed.attributes,
    
    ## points to one or more elements that belong to this change.
    attribute target {
      list { xsd:anyURI+ }
    }?,
    empty
  }
listChange =
  
  ## groups a number of change descriptions associated with either the creation of a source text or the revision of an encoded text. [2.6. The Revision Description 11.7. Identifying Changes and Revisions]
  element listChange {
    (listChange | change)+,
    att.global.attributes,
    att.sortable.attributes,
    att.typed.attributes,
    
    ## indicates whether the ordering of its child change elements is to be considered significant or not
    [ a:defaultValue = "true" ] attribute ordered { xsd:boolean }?,
    empty
  }
TEI =
  
  ## (TEI document) contains a single TEI-conformant document, combining a single TEI header with one or more members of the model.resourceLike class. Multiple TEI elements may be combined to form a teiCorpus element. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element TEI {
    (teiHeader, model.resourceLike+)
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ],
    att.global.attributes,
    att.typed.attributes,
    
    ## specifies the major version number of the TEI Guidelines against which this document is valid.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
\text =
  
  ## contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element text {
    (model.global*, (front, model.global*)?, (body), model.global*),
    att.global.attributes,
    att.declaring.attributes,
    att.typed.attributes,
    att.written.attributes,
    empty
  }
body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter. [4. Default Text Structure]
  element body {
    (model.global*,
     (model.divTop, (model.global | model.divTop)*)?,
     (model.divGenLike, (model.global | model.divGenLike)*)?,
     ((model.divLike, (model.global | model.divGenLike)*)+
      | (model.div1Like, (model.global | model.divGenLike)*)+
      | ((model.common, model.global*)+,
         ((model.divLike, (model.global | model.divGenLike)*)+
          | (model.div1Like, (model.global | model.divGenLike)*)+)?)),
     (model.divBottom, model.global*)*),
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
docTitle =
  
  ## (document title) contains the title of a document, including all its constituents, as given on a title page. [4.6. Title Pages]
  element docTitle {
    (model.global*, (titlePart, model.global*)+),
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
titlePart =
  
  ## contains a subsection or division of the title of a work, as indicated on a title page. [4.6. Title Pages]
  element titlePart {
    macro.paraContent,
    att.global.attributes,
    
    ## specifies the role of this subdivision of the title.
    ## Suggested values include: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    [ a:defaultValue = "main" ]
    attribute type {
      
      ## main title of the work
      "main"
      | 
        ## (subordinate) subtitle of the work
        "sub"
      | 
        ## (alternate) alternative title of the work
        "alt"
      | 
        ## abbreviated form of title
        "short"
      | 
        ## (descriptive) descriptive paraphrase of the work
        "desc"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
docImprint =
  
  ## (document imprint) contains the imprint statement (place and date of publication, publisher name), as given (usually) at the foot of a title page. [4.6. Title Pages]
  element docImprint {
    (text
     | model.gLike
     | model.phrase
     | pubPlace
     | publisher
     | model.global)*,
    att.global.attributes,
    empty
  }
front =
  
  ## (front matter) contains any prefatory matter (headers, abstracts, title page, prefaces, dedications, etc.) found at the start of a document, before the main body. [4.6. Title Pages 4. Default Text Structure]
  element front {
    ((model.frontPart
      | model.pLike
      | model.pLike.front
      | model.global)*,
     (((model.div1Like,
        (model.div1Like | model.frontPart | model.global)*)
       | (model.divLike,
          (model.divLike | model.frontPart | model.global)*)),
      (model.divBottom, (model.divBottom | model.global)*)?)?),
    att.global.attributes,
    att.declaring.attributes,
    empty
  }
att.datable.custom.attributes =
  att.datable.custom.attribute.when-custom,
  att.datable.custom.attribute.notBefore-custom,
  att.datable.custom.attribute.notAfter-custom,
  att.datable.custom.attribute.from-custom,
  att.datable.custom.attribute.to-custom,
  att.datable.custom.attribute.datingPoint,
  att.datable.custom.attribute.datingMethod
att.datable.custom.attribute.when-custom =
  
  ## supplies the value of a date or time in some custom standard form.
  attribute when-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.notBefore-custom =
  
  ## specifies the earliest possible date for the event in some custom standard form.
  attribute notBefore-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.notAfter-custom =
  
  ## specifies the latest possible date for the event in some custom standard form.
  attribute notAfter-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.from-custom =
  
  ## indicates the starting point of the period in some custom standard form.
  attribute from-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.to-custom =
  
  ## indicates the ending point of the period in some custom standard form.
  attribute to-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
att.datable.custom.attribute.datingPoint =
  
  ## supplies a pointer to some location defining a named point in time with reference to which the datable item is understood to have occurred
  attribute datingPoint { xsd:anyURI }?
att.datable.custom.attribute.datingMethod =
  
  ## supplies a pointer to a calendar element or other means of interpreting the values of the custom dating attributes.
  attribute datingMethod { xsd:anyURI }?
model.persNamePart = notAllowed
model.persNamePart_alternation = notAllowed
model.persNamePart_sequence = empty
model.persNamePart_sequenceOptional = empty
model.persNamePart_sequenceOptionalRepeatable = empty
model.persNamePart_sequenceRepeatable = notAllowed
att.datable.iso.attributes =
  att.datable.iso.attribute.when-iso,
  att.datable.iso.attribute.notBefore-iso,
  att.datable.iso.attribute.notAfter-iso,
  att.datable.iso.attribute.from-iso,
  att.datable.iso.attribute.to-iso
att.datable.iso.attribute.when-iso =
  
  ## supplies the value of a date or time in a standard form.
  attribute when-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.notBefore-iso =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.notAfter-iso =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.from-iso =
  
  ## indicates the starting point of the period in standard form.
  attribute from-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
att.datable.iso.attribute.to-iso =
  
  ## indicates the ending point of the period in standard form.
  attribute to-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
placeName =
  
  ## contains an absolute or relative place name. [13.2.3. Place Names]
  element placeName {
    macro.phraseSeq,
    att.datable.attributes,
    att.editLike.attributes,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
listPlace =
  
  ## (list of places) contains a list of places, optionally followed by a list of relationships (other than containment) defined amongst them. [2.2.7. The Source Description 13.3.4. Places]
  element listPlace {
    (model.headLike*, (model.placeLike | listPlace)+, empty*),
    att.global.attribute.xmlid,
    att.global.attribute.n,
    
    ##
    attribute type {
      
      ##
      "Hauptgemeinden"
      | 
        ##
        "Untergemeinden"
      | 
        ##
        "Ortschaften"
      | 
        ##
        "Vorstädte"
    }?,
    empty
  }
place =
  
  ## contains data about a geographic location [13.3.4. Places]
  element place {
    (model.headLike*,
     (model.pLike*
      | (model.labelLike | model.placeStateLike | model.eventLike)*),
     (model.noteLike | model.biblLike | idno)*,
     (model.placeLike | listPlace)*),
    att.global.attribute.n,
    
    ##
    attribute type {
      
      ##
      "Provinz"
      | 
        ##
        "Kreis"
      | 
        ##
        "Section"
      | 
        ##
        "Bezirksobrigkeit"
    }?,
    empty
  }
population =
  
  ## contains information about the population of a place. [13.3.4.3. States, Traits, and Events]
  element population {
    (model.headLike*,
     ((model.pLike+ | model.labelLike+),
      (model.noteLike | model.biblLike)*)?,
     population*),
    
    ##
    attribute type {
      
      ##
      "Seelen"
    },
    empty
  }
state =
  
  ## contains a description of some status or quality attributed to a person, place, or organization often at some specific time or for a specific date range. [13.3.1. Basic Principles 13.3.2.1. Personal Characteristics]
  element state {
    (state+
     | (model.headLike*,
        model.pLike+,
        (model.noteLike | model.biblLike)*)
     | (model.labelLike | model.noteLike | model.biblLike)*),
    
    ##
    attribute type {
      
      ##
      "Häuser"
    },
    empty
  }
start = TEI
